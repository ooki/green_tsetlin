Search.setIndex({"docnames": ["examples", "green_tsetlin", "index", "installation", "notebooks/california_housing_example", "notebooks/imdb_example"], "filenames": ["examples.rst", "green_tsetlin.rst", "index.rst", "installation.rst", "notebooks/california_housing_example.ipynb", "notebooks/imdb_example.ipynb"], "titles": ["Examples", "green_tsetlin", "Green Tsetlin documentation", "Installation", "California Housing", "IMDB"], "terms": {"imdb": [0, 1, 2], "california": [0, 2], "hous": [0, 2], "class": 1, "tm": [1, 5], "tsetlinmachin": 1, "feedback_typ": 1, "focused_negative_sampl": 1, "n_job": [1, 5], "int": 1, "1": [1, 4, 5], "n_epoch": 1, "20": [1, 5], "seed": [1, 5], "0": [1, 5], "early_exit_acc": 1, "float": 1, "load_best_st": 1, "bool": 1, "true": [1, 5], "fn_epoch_callback": 1, "function": 1, "empty_epoch_callback": 1, "fn_test_scor": 1, "accuraci": 1, "progress_bar": 1, "copy_training_data": 1, "k_fold": [1, 5], "kfold_progress_bar": 1, "fals": [1, 4, 5], "sourc": 1, "base": [1, 5], "object": 1, "import": [1, 4, 5], "gt": [1, 4], "n_liter": 1, "4": [1, 5], "n_claus": 1, "5": [1, 4, 5], "n_class": 1, "2": [1, 5], "": 1, "3": 1, "threshold": 1, "42": [1, 5], "literal_budget": [1, 5], "boost_true_posit": 1, "train_x": 1, "train_i": [1, 5], "eval_x": 1, "eval_i": 1, "xor_dataset": 1, "set_train_data": [1, 5], "set_test_data": [1, 5], "train": [1, 5], "x_test": 1, "arrai": [1, 5], "y_test": 1, "x_train": 1, "y_train": 1, "set_validation_data": 1, "x_val": 1, "y_val": 1, "epoch": 1, "train_acc": 1, "test_scor": 1, "convolutionaltsetlinmachin": 1, "list": 1, "patch_width": 1, "patch_height": 1, "none": [1, 5], "multi_label": 1, "densest": 1, "A": 1, "storag": [1, 5], "tsetlin": [1, 5], "machin": [1, 3, 5], "state": 1, "w": 1, "i": [1, 5], "weight": 1, "c": 1, "claus": 1, "Will": 1, "creat": 1, "ani": 1, "copi": 1, "underli": 1, "refer": 1, "so": 1, "user": 1, "respons": 1, "chang": 1, "after": 1, "ha": 1, "been": 1, "load": 1, "OR": 1, "provid": 1, "static": 1, "load_from_fil": 1, "file_path": 1, "save_to_fil": 1, "construct_clause_block": 1, "backend": 1, "block": 1, "alloc": 1, "them": 1, "us": [1, 5], "allocate_clause_block": 1, "context": 1, "manag": 1, "The": [1, 5], "ar": 1, "found": 1, "_cb": 1, "attribut": 1, "thi": [1, 5], "return": 1, "share": 1, "cb": 1, "arg": 1, "clause_block": 1, "type": 1, "self": 1, "_backend_clause_block_cl": 1, "while": 1, "member": 1, "get_predictor": 1, "explan": 1, "str": 1, "exclude_negative_claus": 1, "get_ruleset": 1, "load_stat": 1, "path_or_st": 1, "from": [1, 4, 5], "given": 1, "path": 1, "paramet": [1, 5], "union": 1, "file": 1, "save_st": 1, "save": 1, "specifi": 1, "set_literal_budget": 1, "literal_budget_or_budgets_list": 1, "set": [1, 5], "number": [1, 5], "liter": [1, 5], "max": 1, "ON": 1, "If": 1, "len": [1, 5], "budget": [1, 5], "each": [1, 4, 5], "size": 1, "10": [1, 5], "30": [1, 5], "equal": 1, "repeat": 1, "same": 1, "we": [1, 5], "have": 1, "set_num_clause_block": 1, "n_blocks_or_cb_s": 1, "remind": 1, "zero": 1, "ad": 1, "first": 1, "clause_block_s": 1, "total": 1, "match": 1, "set_trainable_flag": 1, "trainable_flag": 1, "trainabl": 1, "flag": 1, "boolean": 1, "valu": [1, 5], "indic": 1, "whether": 1, "rais": 1, "valueerror": 1, "befor": 1, "doe": 1, "cbs_or_tm": 1, "entri": 1, "dealloc": 1, "exit": 1, "either": [1, 5], "get": [1, 5], "uniqu": 1, "start": 1, "empti": 1, "sparsest": 1, "c_data": 1, "data": [1, 4, 5], "c_indic": 1, "c_indptr": 1, "indptr": 1, "al": 1, "activ": 1, "csr": 1, "matrix": 1, "sparsetsetlinmachin": 1, "dynamic_": 1, "featur": [1, 4], "tupl": [1, 5], "alia": 1, "field": 1, "explain": 1, "target": [1, 4], "export_as_program": 1, "to_fil": 1, "export": 1, "topological_c": 1, "from_ruleset": 1, "predict": 1, "x": [1, 4, 5], "predict_and_explain": 1, "set_featur": 1, "feature_map": 1, "set_target_nam": 1, "name": 1, "is_multi_label": 1, "compile_from_dense_st": 1, "compile_from_sparse_st": 1, "hyperparametersearch": [1, 5], "s_space": [1, 5], "clause_spac": [1, 5], "threshold_spac": [1, 5], "max_epoch_per_tri": [1, 5], "minimize_literal_budget": [1, 5], "test_x": 1, "test_i": 1, "n_train": 1, "50": [1, 5], "n_test": 1, "8": 1, "nois": 1, "hyperparam_search": 1, "shape": 1, "optim": [1, 5], "trial": [1, 5], "study_nam": [1, 5], "xor": 1, "studi": 1, "show_progress_bar": [1, 5], "sqlite": [1, 5], "db": [1, 5], "optuna": [1, 5], "gener": 1, "best": [1, 5], "test": 1, "score": [1, 5], "achiev": 1, "dure": 1, "n_trial": [1, 5], "method": 1, "option": 1, "default": 1, "show": [1, 5], "progress": 1, "bar": 1, "model": 1, "input": [1, 5], "imdb_dataset": 1, "imdb_num_word": 1, "5000": [1, 5], "imdb_index_from": 1, "max_ngram": 1, "train_siz": 1, "test_siz": [1, 5], "skb": 1, "process": 1, "dataset": [1, 4, 5], "nlp": 1, "classif": 1, "15": [1, 5], "200": 1, "100": [1, 5], "where": 1, "y": [1, 4, 5], "rest": 1, "being": 1, "dummi": 1, "variabl": 1, "param": [1, 5], "probabl": 1, "noisi": 1, "must": 1, "least": 1, "random": [1, 5], "uint8": [1, 5], "uint32": [1, 5], "instal": [2, 5], "exampl": 2, "green_tsetlin": [2, 3, 4, 5], "trainer": 2, "tsetlin_machin": 2, "sparse_tsetlin_machin": 2, "predictor": 2, "ruleset": 2, "hpsearch": [2, 5], "dataset_gener": 2, "index": 2, "pip": [3, 5], "For": 3, "less": [3, 5], "cpu": [3, 5], "heavi": [3, 5], "numpi": [4, 5], "np": [4, 5], "panda": 4, "pd": 4, "green_tsetlin_cor": 4, "gtc": 4, "sklearn": [4, 5], "feature_extract": [4, 5], "text": [4, 5], "countvector": [4, 5], "model_select": [4, 5], "train_test_split": [4, 5], "fetch_california_h": 4, "cali_h": 4, "df": 4, "datafram": 4, "column": 4, "feature_nam": 4, "describ": 4, "loop": 4, "all": 4, "convert": 4, "binari": [4, 5], "cat": 4, "col": 4, "continu": 4, "cut": 4, "bin": 4, "label": [4, 5], "make": 4, "concat": 4, "get_dummi": 4, "prefix": 4, "axi": 4, "drop": 4, "notebook": 5, "how": 5, "green": 5, "sentiment": 5, "rng": 5, "default_rng": 5, "With": 5, "can": 5, "transform": 5, "bag": 5, "word": 5, "e": 5, "g": 5, "love": 5, "swim": 5, "ocean": 5, "vector": 5, "vocabulari": 5, "dog": 5, "bike": 5, "movi": 5, "obtain": 5, "fit": 5, "give": 5, "u": 5, "token": 5, "occur": 5, "load_dataset": 5, "ngram_rang": 5, "lowercas": 5, "max_featur": 5, "x_bin": 5, "toarrai": 5, "astyp": 5, "shuffle_index": 5, "rang": 5, "shuffl": 5, "2500": 5, "train_x_bin": 5, "val_x_bin": 5, "val_i": 5, "random_st": 5, "librari": 5, "offer": 5, "implemen": 5, "system": 5, "older": 5, "plug": 5, "plai": 5, "version": 5, "differ": 5, "built": 5, "search": 5, "space": 5, "disir": 5, "paramat": 5, "between": 5, "singl": 5, "onli": 5, "250": 5, "125": 5, "minimum": 5, "cross": 5, "valid": 5, "k": 5, "an": 5, "integ": 5, "run": 5, "time": 5, "over": 5, "store": 5, "databas": 5, "my_databas": 5, "see": 5, "document": 5, "here": 5, "1000": 5, "1500": 5, "result": 5, "call": 5, "best_trial": 5, "perform": 5, "print": 5}, "objects": {"green_tsetlin": [[1, 0, 0, "-", "dataset_generator"], [1, 0, 0, "-", "hpsearch"], [1, 0, 0, "-", "predictor"], [1, 0, 0, "-", "ruleset"], [1, 0, 0, "-", "sparse_tsetlin_machine"], [1, 0, 0, "-", "trainer"], [1, 0, 0, "-", "tsetlin_machine"]], "green_tsetlin.dataset_generator": [[1, 1, 1, "", "imdb_dataset"], [1, 1, 1, "", "xor_dataset"]], "green_tsetlin.hpsearch": [[1, 2, 1, "", "HyperparameterSearch"]], "green_tsetlin.hpsearch.HyperparameterSearch": [[1, 3, 1, "", "objective"], [1, 3, 1, "", "optimize"], [1, 3, 1, "", "set_test_data"], [1, 3, 1, "", "set_train_data"]], "green_tsetlin.predictor": [[1, 2, 1, "", "Explanation"], [1, 2, 1, "", "Predictor"]], "green_tsetlin.predictor.Explanation": [[1, 4, 1, "", "features"], [1, 4, 1, "", "literals"]], "green_tsetlin.predictor.Predictor": [[1, 3, 1, "", "explain"], [1, 3, 1, "", "export_as_program"], [1, 3, 1, "", "from_ruleset"], [1, 3, 1, "", "predict"], [1, 3, 1, "", "predict_and_explain"], [1, 3, 1, "", "set_features"], [1, 3, 1, "", "set_target_names"]], "green_tsetlin.ruleset": [[1, 2, 1, "", "RuleSet"]], "green_tsetlin.ruleset.RuleSet": [[1, 3, 1, "", "compile_from_dense_state"], [1, 3, 1, "", "compile_from_sparse_state"]], "green_tsetlin.sparse_tsetlin_machine": [[1, 2, 1, "", "SparseState"], [1, 2, 1, "", "SparseTsetlinMachine"]], "green_tsetlin.sparse_tsetlin_machine.SparseState": [[1, 3, 1, "", "copy"], [1, 3, 1, "", "load_from_file"], [1, 3, 1, "", "save_to_file"]], "green_tsetlin.sparse_tsetlin_machine.SparseTsetlinMachine": [[1, 3, 1, "", "get_predictor"], [1, 3, 1, "", "load_state"], [1, 3, 1, "", "save_state"]], "green_tsetlin.trainer": [[1, 2, 1, "", "Trainer"], [1, 1, 1, "", "empty_epoch_callback"]], "green_tsetlin.trainer.Trainer": [[1, 3, 1, "", "set_test_data"], [1, 3, 1, "", "set_train_data"], [1, 3, 1, "", "set_validation_data"], [1, 3, 1, "", "train"]], "green_tsetlin.tsetlin_machine": [[1, 2, 1, "", "ConvolutionalTsetlinMachine"], [1, 2, 1, "", "DenseState"], [1, 2, 1, "", "TsetlinMachine"], [1, 1, 1, "", "allocate_clause_blocks"]], "green_tsetlin.tsetlin_machine.DenseState": [[1, 3, 1, "", "copy"], [1, 3, 1, "", "load_from_file"], [1, 3, 1, "", "save_to_file"]], "green_tsetlin.tsetlin_machine.TsetlinMachine": [[1, 3, 1, "", "construct_clause_blocks"], [1, 3, 1, "", "get_predictor"], [1, 3, 1, "", "get_ruleset"], [1, 3, 1, "", "load_state"], [1, 3, 1, "", "save_state"], [1, 3, 1, "", "set_literal_budget"], [1, 3, 1, "", "set_num_clause_blocks"], [1, 3, 1, "", "set_trainable_flags"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"exampl": [0, 1], "green_tsetlin": 1, "trainer": 1, "tsetlin_machin": 1, "sparse_tsetlin_machin": 1, "predictor": 1, "ruleset": 1, "hpsearch": 1, "dataset_gener": 1, "green": 2, "tsetlin": 2, "document": 2, "content": 2, "indic": 2, "tabl": 2, "instal": 3, "california": 4, "hous": 4, "imdb": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"California Housing": [[4, "California-Housing"]], "IMDB": [[5, "IMDB"]], "Green Tsetlin documentation": [[2, "green-tsetlin-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Examples": [[0, "examples"]], "Installation": [[3, "installation"]], "green_tsetlin": [[1, "green-tsetlin"]], "trainer": [[1, "module-green_tsetlin.trainer"]], "Example": [[1, "example"], [1, "id1"]], "tsetlin_machine": [[1, "module-green_tsetlin.tsetlin_machine"]], "sparse_tsetlin_machine": [[1, "module-green_tsetlin.sparse_tsetlin_machine"]], "predictor": [[1, "module-green_tsetlin.predictor"]], "ruleset": [[1, "module-green_tsetlin.ruleset"]], "hpsearch": [[1, "module-green_tsetlin.hpsearch"]], "dataset_generator": [[1, "module-green_tsetlin.dataset_generator"]]}, "indexentries": {"convolutionaltsetlinmachine (class in green_tsetlin.tsetlin_machine)": [[1, "green_tsetlin.tsetlin_machine.ConvolutionalTsetlinMachine"]], "densestate (class in green_tsetlin.tsetlin_machine)": [[1, "green_tsetlin.tsetlin_machine.DenseState"]], "explanation (class in green_tsetlin.predictor)": [[1, "green_tsetlin.predictor.Explanation"]], "hyperparametersearch (class in green_tsetlin.hpsearch)": [[1, "green_tsetlin.hpsearch.HyperparameterSearch"]], "predictor (class in green_tsetlin.predictor)": [[1, "green_tsetlin.predictor.Predictor"]], "ruleset (class in green_tsetlin.ruleset)": [[1, "green_tsetlin.ruleset.RuleSet"]], "sparsestate (class in green_tsetlin.sparse_tsetlin_machine)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseState"]], "sparsetsetlinmachine (class in green_tsetlin.sparse_tsetlin_machine)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseTsetlinMachine"]], "trainer (class in green_tsetlin.trainer)": [[1, "green_tsetlin.trainer.Trainer"]], "tsetlinmachine (class in green_tsetlin.tsetlin_machine)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine"]], "allocate_clause_blocks() (in module green_tsetlin.tsetlin_machine)": [[1, "green_tsetlin.tsetlin_machine.allocate_clause_blocks"]], "compile_from_dense_state() (green_tsetlin.ruleset.ruleset method)": [[1, "green_tsetlin.ruleset.RuleSet.compile_from_dense_state"]], "compile_from_sparse_state() (green_tsetlin.ruleset.ruleset method)": [[1, "green_tsetlin.ruleset.RuleSet.compile_from_sparse_state"]], "construct_clause_blocks() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.construct_clause_blocks"]], "copy() (green_tsetlin.sparse_tsetlin_machine.sparsestate method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseState.copy"]], "copy() (green_tsetlin.tsetlin_machine.densestate method)": [[1, "green_tsetlin.tsetlin_machine.DenseState.copy"]], "empty_epoch_callback() (in module green_tsetlin.trainer)": [[1, "green_tsetlin.trainer.empty_epoch_callback"]], "explain() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.explain"]], "export_as_program() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.export_as_program"]], "features (green_tsetlin.predictor.explanation attribute)": [[1, "green_tsetlin.predictor.Explanation.features"]], "from_ruleset() (green_tsetlin.predictor.predictor static method)": [[1, "green_tsetlin.predictor.Predictor.from_ruleset"]], "get_predictor() (green_tsetlin.sparse_tsetlin_machine.sparsetsetlinmachine method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseTsetlinMachine.get_predictor"]], "get_predictor() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.get_predictor"]], "get_ruleset() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.get_ruleset"]], "green_tsetlin.dataset_generator": [[1, "module-green_tsetlin.dataset_generator"]], "green_tsetlin.hpsearch": [[1, "module-green_tsetlin.hpsearch"]], "green_tsetlin.predictor": [[1, "module-green_tsetlin.predictor"]], "green_tsetlin.ruleset": [[1, "module-green_tsetlin.ruleset"]], "green_tsetlin.sparse_tsetlin_machine": [[1, "module-green_tsetlin.sparse_tsetlin_machine"]], "green_tsetlin.trainer": [[1, "module-green_tsetlin.trainer"]], "green_tsetlin.tsetlin_machine": [[1, "module-green_tsetlin.tsetlin_machine"]], "imdb_dataset() (in module green_tsetlin.dataset_generator)": [[1, "green_tsetlin.dataset_generator.imdb_dataset"]], "literals (green_tsetlin.predictor.explanation attribute)": [[1, "green_tsetlin.predictor.Explanation.literals"]], "load_from_file() (green_tsetlin.sparse_tsetlin_machine.sparsestate static method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseState.load_from_file"]], "load_from_file() (green_tsetlin.tsetlin_machine.densestate static method)": [[1, "green_tsetlin.tsetlin_machine.DenseState.load_from_file"]], "load_state() (green_tsetlin.sparse_tsetlin_machine.sparsetsetlinmachine method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseTsetlinMachine.load_state"]], "load_state() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.load_state"]], "module": [[1, "module-green_tsetlin.dataset_generator"], [1, "module-green_tsetlin.hpsearch"], [1, "module-green_tsetlin.predictor"], [1, "module-green_tsetlin.ruleset"], [1, "module-green_tsetlin.sparse_tsetlin_machine"], [1, "module-green_tsetlin.trainer"], [1, "module-green_tsetlin.tsetlin_machine"]], "objective() (green_tsetlin.hpsearch.hyperparametersearch method)": [[1, "green_tsetlin.hpsearch.HyperparameterSearch.objective"]], "optimize() (green_tsetlin.hpsearch.hyperparametersearch method)": [[1, "green_tsetlin.hpsearch.HyperparameterSearch.optimize"]], "predict() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.predict"]], "predict_and_explain() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.predict_and_explain"]], "save_state() (green_tsetlin.sparse_tsetlin_machine.sparsetsetlinmachine method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseTsetlinMachine.save_state"]], "save_state() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.save_state"]], "save_to_file() (green_tsetlin.sparse_tsetlin_machine.sparsestate method)": [[1, "green_tsetlin.sparse_tsetlin_machine.SparseState.save_to_file"]], "save_to_file() (green_tsetlin.tsetlin_machine.densestate method)": [[1, "green_tsetlin.tsetlin_machine.DenseState.save_to_file"]], "set_features() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.set_features"]], "set_literal_budget() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.set_literal_budget"]], "set_num_clause_blocks() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.set_num_clause_blocks"]], "set_target_names() (green_tsetlin.predictor.predictor method)": [[1, "green_tsetlin.predictor.Predictor.set_target_names"]], "set_test_data() (green_tsetlin.hpsearch.hyperparametersearch method)": [[1, "green_tsetlin.hpsearch.HyperparameterSearch.set_test_data"]], "set_test_data() (green_tsetlin.trainer.trainer method)": [[1, "green_tsetlin.trainer.Trainer.set_test_data"]], "set_train_data() (green_tsetlin.hpsearch.hyperparametersearch method)": [[1, "green_tsetlin.hpsearch.HyperparameterSearch.set_train_data"]], "set_train_data() (green_tsetlin.trainer.trainer method)": [[1, "green_tsetlin.trainer.Trainer.set_train_data"]], "set_trainable_flags() (green_tsetlin.tsetlin_machine.tsetlinmachine method)": [[1, "green_tsetlin.tsetlin_machine.TsetlinMachine.set_trainable_flags"]], "set_validation_data() (green_tsetlin.trainer.trainer method)": [[1, "green_tsetlin.trainer.Trainer.set_validation_data"]], "train() (green_tsetlin.trainer.trainer method)": [[1, "green_tsetlin.trainer.Trainer.train"]], "xor_dataset() (in module green_tsetlin.dataset_generator)": [[1, "green_tsetlin.dataset_generator.xor_dataset"]]}})